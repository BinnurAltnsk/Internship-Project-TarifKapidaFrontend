{"ast":null,"code":"import axios from'axios';const API_BASE_URL='http://localhost:7175';localStorage.setItem('API_BASE_URL',API_BASE_URL);// Axios instance oluştur\nconst api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Request interceptor - JWT token ekle\napi.interceptors.request.use(config=>{const token=localStorage.getItem('jwt');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>{return Promise.reject(error);});// Response interceptor - Hata yönetimi\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('jwt');localStorage.removeItem('user');window.location.reload();}return Promise.reject(error);});// Resim URL'sini düzgün şekilde oluştur\nexport const getImageUrl=imagePath=>{if(!imagePath)return null;// Eğer zaten tam URL ise, olduğu gibi döndür\nif(imagePath.startsWith('http://')||imagePath.startsWith('https://')){return imagePath;}// Eğer ./ ile başlıyorsa, API base URL ile birleştir\nif(imagePath.startsWith('./')){return`${API_BASE_URL}/${imagePath.substring(2)}`;}// Eğer sadece dosya adı ise, wwwroot altında olduğunu varsay\nreturn`${API_BASE_URL}/${imagePath}`;};// Profil fotoğrafı URL'sini düzgün şekilde oluştur - Backend yapısına uygun\nexport const getProfilePhotoUrl=photoPath=>{if(!photoPath)return null;// Eğer zaten tam URL ise, olduğu gibi döndür\nif(photoPath.startsWith('http://')||photoPath.startsWith('https://')){return photoPath;}// Base64 formatında ise, doğrudan kullan\nif(photoPath.startsWith('data:image/')){return photoPath;}// Backend'de /images/ProfilePhoto/ şeklinde kaydedildiği için\nif(photoPath.startsWith('/images/ProfilePhoto/')){return`${API_BASE_URL}${photoPath}`;}// Eğer sadece dosya adı ise, /images/ProfilePhoto/ ile birleştir\nif(!photoPath.includes('/')){return`${API_BASE_URL}/images/ProfilePhoto/${photoPath}`;}// Diğer durumlar için API base URL ile birleştir\nreturn`${API_BASE_URL}${photoPath.startsWith('/')?'':'/'}${photoPath}`;};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","localStorage","setItem","api","create","baseURL","headers","interceptors","request","use","config","token","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","reload","getImageUrl","imagePath","startsWith","substring","getProfilePhotoUrl","photoPath","includes"],"sources":["C:/Users/x_user/Desktop/Internship-Project-TarifKapidaFrontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:7175';\r\nlocalStorage.setItem('API_BASE_URL', API_BASE_URL);\r\n\r\n// Axios instance oluştur\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor - JWT token ekle\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('jwt');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor - Hata yönetimi\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('jwt');\r\n      localStorage.removeItem('user');\r\n      window.location.reload();\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Resim URL'sini düzgün şekilde oluştur\r\nexport const getImageUrl = (imagePath) => {\r\n  if (!imagePath) return null;\r\n  \r\n  // Eğer zaten tam URL ise, olduğu gibi döndür\r\n  if (imagePath.startsWith('http://') || imagePath.startsWith('https://')) {\r\n    return imagePath;\r\n  }\r\n  \r\n  // Eğer ./ ile başlıyorsa, API base URL ile birleştir\r\n  if (imagePath.startsWith('./')) {\r\n    return `${API_BASE_URL}/${imagePath.substring(2)}`;\r\n  }\r\n  \r\n  // Eğer sadece dosya adı ise, wwwroot altında olduğunu varsay\r\n  return `${API_BASE_URL}/${imagePath}`;\r\n};\r\n\r\n// Profil fotoğrafı URL'sini düzgün şekilde oluştur - Backend yapısına uygun\r\nexport const getProfilePhotoUrl = (photoPath) => {\r\n  if (!photoPath) return null;\r\n  \r\n  // Eğer zaten tam URL ise, olduğu gibi döndür\r\n  if (photoPath.startsWith('http://') || photoPath.startsWith('https://')) {\r\n    return photoPath;\r\n  }\r\n  \r\n  // Base64 formatında ise, doğrudan kullan\r\n  if (photoPath.startsWith('data:image/')) {\r\n    return photoPath;\r\n  }\r\n  \r\n  // Backend'de /images/ProfilePhoto/ şeklinde kaydedildiği için\r\n  if (photoPath.startsWith('/images/ProfilePhoto/')) {\r\n    return `${API_BASE_URL}${photoPath}`;\r\n  }\r\n  \r\n  // Eğer sadece dosya adı ise, /images/ProfilePhoto/ ile birleştir\r\n  if (!photoPath.includes('/')) {\r\n    return `${API_BASE_URL}/images/ProfilePhoto/${photoPath}`;\r\n  }\r\n  \r\n  // Diğer durumlar için API base URL ile birleştir\r\n  return `${API_BASE_URL}${photoPath.startsWith('/') ? '' : '/'}${photoPath}`;\r\n};\r\n\r\nexport default api; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,YAAY,CAAG,uBAAuB,CAC5CC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAEF,YAAY,CAAC,CAElD;AACA,KAAM,CAAAG,GAAG,CAAGJ,KAAK,CAACK,MAAM,CAAC,CACvBC,OAAO,CAAEL,YAAY,CACrBM,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,EAAK,CACV,KAAM,CAAAC,KAAK,CAAGV,YAAY,CAACW,OAAO,CAAC,KAAK,CAAC,CACzC,GAAID,KAAK,CAAE,CACTD,MAAM,CAACJ,OAAO,CAACO,aAAa,CAAG,UAAUF,KAAK,EAAE,CAClD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CACAI,KAAK,EAAK,CACT,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACAX,GAAG,CAACI,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC1BQ,QAAQ,EAAKA,QAAQ,CACrBH,KAAK,EAAK,KAAAI,eAAA,CACT,GAAI,EAAAA,eAAA,CAAAJ,KAAK,CAACG,QAAQ,UAAAC,eAAA,iBAAdA,eAAA,CAAgBC,MAAM,IAAK,GAAG,CAAE,CAClClB,YAAY,CAACmB,UAAU,CAAC,KAAK,CAAC,CAC9BnB,YAAY,CAACmB,UAAU,CAAC,MAAM,CAAC,CAC/BC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAC1B,CACA,MAAO,CAAAR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAU,WAAW,CAAIC,SAAS,EAAK,CACxC,GAAI,CAACA,SAAS,CAAE,MAAO,KAAI,CAE3B;AACA,GAAIA,SAAS,CAACC,UAAU,CAAC,SAAS,CAAC,EAAID,SAAS,CAACC,UAAU,CAAC,UAAU,CAAC,CAAE,CACvE,MAAO,CAAAD,SAAS,CAClB,CAEA;AACA,GAAIA,SAAS,CAACC,UAAU,CAAC,IAAI,CAAC,CAAE,CAC9B,MAAO,GAAG1B,YAAY,IAAIyB,SAAS,CAACE,SAAS,CAAC,CAAC,CAAC,EAAE,CACpD,CAEA;AACA,MAAO,GAAG3B,YAAY,IAAIyB,SAAS,EAAE,CACvC,CAAC,CAED;AACA,MAAO,MAAM,CAAAG,kBAAkB,CAAIC,SAAS,EAAK,CAC/C,GAAI,CAACA,SAAS,CAAE,MAAO,KAAI,CAE3B;AACA,GAAIA,SAAS,CAACH,UAAU,CAAC,SAAS,CAAC,EAAIG,SAAS,CAACH,UAAU,CAAC,UAAU,CAAC,CAAE,CACvE,MAAO,CAAAG,SAAS,CAClB,CAEA;AACA,GAAIA,SAAS,CAACH,UAAU,CAAC,aAAa,CAAC,CAAE,CACvC,MAAO,CAAAG,SAAS,CAClB,CAEA;AACA,GAAIA,SAAS,CAACH,UAAU,CAAC,uBAAuB,CAAC,CAAE,CACjD,MAAO,GAAG1B,YAAY,GAAG6B,SAAS,EAAE,CACtC,CAEA;AACA,GAAI,CAACA,SAAS,CAACC,QAAQ,CAAC,GAAG,CAAC,CAAE,CAC5B,MAAO,GAAG9B,YAAY,wBAAwB6B,SAAS,EAAE,CAC3D,CAEA;AACA,MAAO,GAAG7B,YAAY,GAAG6B,SAAS,CAACH,UAAU,CAAC,GAAG,CAAC,CAAG,EAAE,CAAG,GAAG,GAAGG,SAAS,EAAE,CAC7E,CAAC,CAED,cAAe,CAAA1B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}