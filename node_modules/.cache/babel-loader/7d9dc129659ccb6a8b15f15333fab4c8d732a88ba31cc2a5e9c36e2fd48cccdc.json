{"ast":null,"code":"import api from './api';\nexport const userService = {\n  // Kullanıcı işlemleri\n  login: credentials => api.post('/api/User/Login', credentials),\n  register: userData => api.post('/api/User/Register', userData),\n  getUserById: userId => api.get(`/api/User/GetUserById/${userId}`),\n  getUserByEmail: email => api.get(`/api/User/GetUserByEmail/${email}`),\n  getUsers: () => api.get('/api/User/GetUsers'),\n  updateUser: userData => api.put('/api/User/UpdateUser', userData),\n  deleteUser: userId => api.post('/api/User/DeleteUser', {\n    userId\n  }),\n  // Profil işlemleri\n  getUserProfile: userId => api.get(`/api/UserProfile/GetUserProfile/${userId}`),\n  updateUserProfile: userProfileData => api.put('/api/UserProfile/UpdateUserProfile', userProfileData),\n  createUserProfile: userProfileData => api.post('/api/UserProfile/CreateUserProfile', userProfileData),\n  profileExists: userId => api.get(`/api/UserProfile/ProfileExists/${userId}`),\n  // Profil fotoğrafı işlemleri\n  uploadProfilePhotoBase64: (userId, base64Image) => {\n    return api.post('/api/UserProfile/UploadUserProfilePhoto', {\n      userId: userId,\n      ProfileImageUrl: base64Image\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  },\n  // Diğer profil işlemleri\n  getProfilePhoto: userId => api.get(`/api/UserProfile/GetUserProfilePhoto/${userId}`),\n  deleteProfilePhoto: userId => api.post(`/api/UserProfile/DeleteUserProfilePhoto/${userId}`),\n  updateNotificationSettings: settings => api.put('/api/UserProfile/UpdateNotificationSettings', settings),\n  getNotificationSettings: userId => api.get(`/api/UserProfile/GetNotificationSettings/${userId}`),\n  linkSocialAccount: (userId, provider, accessToken) => api.get('/api/UserProfile/LinkSocialAccount', {\n    params: {\n      userId,\n      provider,\n      accessToken\n    }\n  }),\n  getLinkedSocialAccounts: userId => api.get(`/api/UserProfile/GetLinkedSocialAccounts/${userId}`),\n  // Alias fonksiyonlar\n  getUserProfileByUserId: userId => api.get(`/api/UserProfile/GetUserProfile/${userId}`)\n};","map":{"version":3,"names":["api","userService","login","credentials","post","register","userData","getUserById","userId","get","getUserByEmail","email","getUsers","updateUser","put","deleteUser","getUserProfile","updateUserProfile","userProfileData","createUserProfile","profileExists","uploadProfilePhotoBase64","base64Image","ProfileImageUrl","headers","getProfilePhoto","deleteProfilePhoto","updateNotificationSettings","settings","getNotificationSettings","linkSocialAccount","provider","accessToken","params","getLinkedSocialAccounts","getUserProfileByUserId"],"sources":["C:/Users/x_user/Desktop/Internship-Project-TarifKapidaFrontend/src/services/userService.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const userService = {\r\n  // Kullanıcı işlemleri\r\n  login: (credentials) => api.post('/api/User/Login', credentials),\r\n  register: (userData) => api.post('/api/User/Register', userData),\r\n  getUserById: (userId) => api.get(`/api/User/GetUserById/${userId}`),\r\n  getUserByEmail: (email) => api.get(`/api/User/GetUserByEmail/${email}`),\r\n  getUsers: () => api.get('/api/User/GetUsers'),\r\n  updateUser: (userData) => api.put('/api/User/UpdateUser', userData),\r\n  deleteUser: (userId) => api.post('/api/User/DeleteUser', { userId }),\r\n  \r\n  // Profil işlemleri\r\n  getUserProfile: (userId) => api.get(`/api/UserProfile/GetUserProfile/${userId}`),\r\n  updateUserProfile: (userProfileData) => api.put('/api/UserProfile/UpdateUserProfile', userProfileData),\r\n  createUserProfile: (userProfileData) => api.post('/api/UserProfile/CreateUserProfile', userProfileData),\r\n  profileExists: (userId) => api.get(`/api/UserProfile/ProfileExists/${userId}`),\r\n  \r\n  // Profil fotoğrafı işlemleri\r\n  uploadProfilePhotoBase64: (userId, base64Image) => {\r\n    return api.post('/api/UserProfile/UploadUserProfilePhoto', {\r\n      userId: userId,\r\n      ProfileImageUrl: base64Image\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n  },\r\n  \r\n  // Diğer profil işlemleri\r\n  getProfilePhoto: (userId) => api.get(`/api/UserProfile/GetUserProfilePhoto/${userId}`),\r\n  deleteProfilePhoto: (userId) => api.post(`/api/UserProfile/DeleteUserProfilePhoto/${userId}`),\r\n  updateNotificationSettings: (settings) => api.put('/api/UserProfile/UpdateNotificationSettings', settings),\r\n  getNotificationSettings: (userId) => api.get(`/api/UserProfile/GetNotificationSettings/${userId}`),\r\n  linkSocialAccount: (userId, provider, accessToken) => \r\n    api.get('/api/UserProfile/LinkSocialAccount', {\r\n      params: { userId, provider, accessToken }\r\n    }),\r\n  getLinkedSocialAccounts: (userId) => api.get(`/api/UserProfile/GetLinkedSocialAccounts/${userId}`),\r\n  \r\n  // Alias fonksiyonlar\r\n  getUserProfileByUserId: (userId) => api.get(`/api/UserProfile/GetUserProfile/${userId}`),\r\n}; "],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,WAAW,GAAG;EACzB;EACAC,KAAK,EAAGC,WAAW,IAAKH,GAAG,CAACI,IAAI,CAAC,iBAAiB,EAAED,WAAW,CAAC;EAChEE,QAAQ,EAAGC,QAAQ,IAAKN,GAAG,CAACI,IAAI,CAAC,oBAAoB,EAAEE,QAAQ,CAAC;EAChEC,WAAW,EAAGC,MAAM,IAAKR,GAAG,CAACS,GAAG,CAAC,yBAAyBD,MAAM,EAAE,CAAC;EACnEE,cAAc,EAAGC,KAAK,IAAKX,GAAG,CAACS,GAAG,CAAC,4BAA4BE,KAAK,EAAE,CAAC;EACvEC,QAAQ,EAAEA,CAAA,KAAMZ,GAAG,CAACS,GAAG,CAAC,oBAAoB,CAAC;EAC7CI,UAAU,EAAGP,QAAQ,IAAKN,GAAG,CAACc,GAAG,CAAC,sBAAsB,EAAER,QAAQ,CAAC;EACnES,UAAU,EAAGP,MAAM,IAAKR,GAAG,CAACI,IAAI,CAAC,sBAAsB,EAAE;IAAEI;EAAO,CAAC,CAAC;EAEpE;EACAQ,cAAc,EAAGR,MAAM,IAAKR,GAAG,CAACS,GAAG,CAAC,mCAAmCD,MAAM,EAAE,CAAC;EAChFS,iBAAiB,EAAGC,eAAe,IAAKlB,GAAG,CAACc,GAAG,CAAC,oCAAoC,EAAEI,eAAe,CAAC;EACtGC,iBAAiB,EAAGD,eAAe,IAAKlB,GAAG,CAACI,IAAI,CAAC,oCAAoC,EAAEc,eAAe,CAAC;EACvGE,aAAa,EAAGZ,MAAM,IAAKR,GAAG,CAACS,GAAG,CAAC,kCAAkCD,MAAM,EAAE,CAAC;EAE9E;EACAa,wBAAwB,EAAEA,CAACb,MAAM,EAAEc,WAAW,KAAK;IACjD,OAAOtB,GAAG,CAACI,IAAI,CAAC,yCAAyC,EAAE;MACzDI,MAAM,EAAEA,MAAM;MACde,eAAe,EAAED;IACnB,CAAC,EAAE;MACDE,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACJ,CAAC;EAED;EACAC,eAAe,EAAGjB,MAAM,IAAKR,GAAG,CAACS,GAAG,CAAC,wCAAwCD,MAAM,EAAE,CAAC;EACtFkB,kBAAkB,EAAGlB,MAAM,IAAKR,GAAG,CAACI,IAAI,CAAC,2CAA2CI,MAAM,EAAE,CAAC;EAC7FmB,0BAA0B,EAAGC,QAAQ,IAAK5B,GAAG,CAACc,GAAG,CAAC,6CAA6C,EAAEc,QAAQ,CAAC;EAC1GC,uBAAuB,EAAGrB,MAAM,IAAKR,GAAG,CAACS,GAAG,CAAC,4CAA4CD,MAAM,EAAE,CAAC;EAClGsB,iBAAiB,EAAEA,CAACtB,MAAM,EAAEuB,QAAQ,EAAEC,WAAW,KAC/ChC,GAAG,CAACS,GAAG,CAAC,oCAAoC,EAAE;IAC5CwB,MAAM,EAAE;MAAEzB,MAAM;MAAEuB,QAAQ;MAAEC;IAAY;EAC1C,CAAC,CAAC;EACJE,uBAAuB,EAAG1B,MAAM,IAAKR,GAAG,CAACS,GAAG,CAAC,4CAA4CD,MAAM,EAAE,CAAC;EAElG;EACA2B,sBAAsB,EAAG3B,MAAM,IAAKR,GAAG,CAACS,GAAG,CAAC,mCAAmCD,MAAM,EAAE;AACzF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}