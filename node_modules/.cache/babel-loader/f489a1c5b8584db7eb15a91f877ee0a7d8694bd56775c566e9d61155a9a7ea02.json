{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\x_user\\\\Desktop\\\\tarif-kapida\\\\src\\\\components\\\\RecipeCard.jsx\";\nimport React from \"react\";\nimport \"./RecipeCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeCard = ({\n  title,\n  imageUrl,\n  calories,\n  ingredients,\n  prepTime,\n  isVegetarian\n}) => {\n  // Malzemeleri diziye √ßevir (virg√ºl veya satƒ±r ba≈üƒ±na g√∂re)\n  let ingredientList = [];\n  if (typeof ingredients === \"string\") {\n    ingredientList = ingredients.split(/,|\\n/).map(i => i.trim()).filter(Boolean);\n  } else if (Array.isArray(ingredients)) {\n    ingredientList = ingredients;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe-card modern\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-meta\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uD83D\\uDD25 \", calories, \" kalori\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u23F1\\uFE0F \", prepTime, \" dk\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: isVegetarian ? \"üå± Vejetaryen\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ingredients-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Malzemeler:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: ingredientList.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item, /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `https://www.amazon.com.tr/s?k=${encodeURIComponent(item)}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"amazon-btn\",\n              children: \"Amazon'dan al\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = RecipeCard;\nexport default RecipeCard;\nvar _c;\n$RefreshReg$(_c, \"RecipeCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RecipeCard","title","imageUrl","calories","ingredients","prepTime","isVegetarian","ingredientList","split","map","i","trim","filter","Boolean","Array","isArray","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","item","idx","href","encodeURIComponent","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/x_user/Desktop/tarif-kapida/src/components/RecipeCard.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./RecipeCard.css\";\r\n\r\nconst RecipeCard = ({ title, imageUrl, calories, ingredients, prepTime, isVegetarian }) => {\r\n  // Malzemeleri diziye √ßevir (virg√ºl veya satƒ±r ba≈üƒ±na g√∂re)\r\n  let ingredientList = [];\r\n  if (typeof ingredients === \"string\") {\r\n    ingredientList = ingredients.split(/,|\\n/).map(i => i.trim()).filter(Boolean);\r\n  } else if (Array.isArray(ingredients)) {\r\n    ingredientList = ingredients;\r\n  }\r\n\r\n  return (\r\n    <div className=\"recipe-card modern\">\r\n      <img src={imageUrl} alt={title} />\r\n      <div className=\"recipe-content\">\r\n        <h2>{title}</h2>\r\n        <div className=\"recipe-meta\">\r\n          <span>üî• {calories} kalori</span>\r\n          <span>‚è±Ô∏è {prepTime} dk</span>\r\n          <span>{isVegetarian ? \"üå± Vejetaryen\" : \"\"}</span>\r\n        </div>\r\n        <div className=\"ingredients-list\">\r\n          <strong>Malzemeler:</strong>\r\n          <ul>\r\n            {ingredientList.map((item, idx) => (\r\n              <li key={idx}>\r\n                {item}\r\n                <a\r\n                  href={`https://www.amazon.com.tr/s?k=${encodeURIComponent(item)}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"amazon-btn\"\r\n                >\r\n                  Amazon'dan al\r\n                </a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}