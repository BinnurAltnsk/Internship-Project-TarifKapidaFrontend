{"ast":null,"code":"import api from'./api';export const userService={// Kullanıcı girişi\nlogin:credentials=>api.post('/api/User/Login',credentials),// Kullanıcı kaydı\nregister:userData=>api.post('/api/User/Register',userData),// Kullanıcı bilgilerini getir\ngetUserById:userId=>api.get(`/api/User/GetUserById/${userId}`),// Email ile kullanıcı bilgilerini getir\ngetUserByEmail:email=>api.get(`/api/User/GetUserByEmail/${email}`),// Tüm kullanıcıları getir\ngetUsers:()=>api.get('/api/User/GetUsers'),// Kullanıcı güncelle\nupdateUser:userData=>api.put('/api/User/UpdateUser',userData),// Kullanıcı sil\ndeleteUser:userId=>api.post('/api/User/DeleteUser',{userId}),// UserProfile API'leri\n// UserProfile'ı getir\ngetUserProfile:userId=>api.get(`/api/UserProfile/GetUserProfile/${userId}`),// UserProfile'ı güncelle\nupdateUserProfile:userProfileData=>api.put('/api/UserProfile/UpdateUserProfile',userProfileData),// UserProfile oluştur\ncreateUserProfile:userProfileData=>api.post('/api/UserProfile/CreateUserProfile',userProfileData),// Profil var mı kontrol et\nprofileExists:userId=>api.get(`/api/UserProfile/ProfileExists/${userId}`),// Profil fotoğrafı yükle - Backend API'sine uygun\nuploadProfilePhoto:(userId,file)=>{const formData=new FormData();formData.append('file',file);formData.append('userId',userId);return api.post('/api/UserProfile/UploadUserProfilePhoto',formData,{headers:{'Content-Type':'multipart/form-data'}});},// Profil fotoğrafı yükle - Base64 ile (backend kodlarınıza göre)\nuploadProfilePhotoBase64:(userId,base64Image)=>{return api.post('/api/UserProfile/UploadUserProfilePhoto',{userId:userId,profileImageBase64:base64Image// Backend'deki property adına uygun\n},{headers:{'Content-Type':'application/json'}});},// Profil fotoğrafını getir\ngetProfilePhoto:userId=>api.get(`/api/UserProfile/GetUserProfilePhoto/${userId}`),// Profil fotoğrafını sil\ndeleteProfilePhoto:userId=>api.post(`/api/UserProfile/DeleteUserProfilePhoto/${userId}`),// Bildirim ayarlarını güncelle\nupdateNotificationSettings:settings=>api.put('/api/UserProfile/UpdateNotificationSettings',settings),// Bildirim ayarlarını getir\ngetNotificationSettings:userId=>api.get(`/api/UserProfile/GetNotificationSettings/${userId}`),// Sosyal hesap bağla\nlinkSocialAccount:(userId,provider,accessToken)=>api.get('/api/UserProfile/LinkSocialAccount',{params:{userId,provider,accessToken}}),// Bağlı sosyal hesapları getir\ngetLinkedSocialAccounts:userId=>api.get(`/api/UserProfile/GetLinkedSocialAccounts/${userId}`),getUserProfileByUserId:userId=>api.get(`/api/UserProfile/GetUserProfile/${userId}`)};","map":{"version":3,"names":["api","userService","login","credentials","post","register","userData","getUserById","userId","get","getUserByEmail","email","getUsers","updateUser","put","deleteUser","getUserProfile","updateUserProfile","userProfileData","createUserProfile","profileExists","uploadProfilePhoto","file","formData","FormData","append","headers","uploadProfilePhotoBase64","base64Image","profileImageBase64","getProfilePhoto","deleteProfilePhoto","updateNotificationSettings","settings","getNotificationSettings","linkSocialAccount","provider","accessToken","params","getLinkedSocialAccounts","getUserProfileByUserId"],"sources":["C:/Users/x_user/Desktop/Internship-Project-TarifKapidaFrontend/src/services/userService.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const userService = {\r\n  // Kullanıcı girişi\r\n  login: (credentials) => api.post('/api/User/Login', credentials),\r\n  \r\n  // Kullanıcı kaydı\r\n  register: (userData) => api.post('/api/User/Register', userData),\r\n  \r\n  // Kullanıcı bilgilerini getir\r\n  getUserById: (userId) => api.get(`/api/User/GetUserById/${userId}`),\r\n  \r\n  // Email ile kullanıcı bilgilerini getir\r\n  getUserByEmail: (email) => api.get(`/api/User/GetUserByEmail/${email}`),\r\n  \r\n  // Tüm kullanıcıları getir\r\n  getUsers: () => api.get('/api/User/GetUsers'),\r\n  \r\n  // Kullanıcı güncelle\r\n  updateUser: (userData) => api.put('/api/User/UpdateUser', userData),\r\n  \r\n  // Kullanıcı sil\r\n  deleteUser: (userId) => api.post('/api/User/DeleteUser', { userId }),\r\n  \r\n  // UserProfile API'leri\r\n  \r\n  // UserProfile'ı getir\r\n  getUserProfile: (userId) => api.get(`/api/UserProfile/GetUserProfile/${userId}`),\r\n  \r\n  // UserProfile'ı güncelle\r\n  updateUserProfile: (userProfileData) => api.put('/api/UserProfile/UpdateUserProfile', userProfileData),\r\n  \r\n  // UserProfile oluştur\r\n  createUserProfile: (userProfileData) => api.post('/api/UserProfile/CreateUserProfile', userProfileData),\r\n  \r\n  // Profil var mı kontrol et\r\n  profileExists: (userId) => api.get(`/api/UserProfile/ProfileExists/${userId}`),\r\n  \r\n  // Profil fotoğrafı yükle - Backend API'sine uygun\r\n  uploadProfilePhoto: (userId, file) => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('userId', userId);\r\n    \r\n    return api.post('/api/UserProfile/UploadUserProfilePhoto', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  },\r\n  \r\n  // Profil fotoğrafı yükle - Base64 ile (backend kodlarınıza göre)\r\n  uploadProfilePhotoBase64: (userId, base64Image) => {\r\n    return api.post('/api/UserProfile/UploadUserProfilePhoto', {\r\n      userId: userId,\r\n      profileImageBase64: base64Image // Backend'deki property adına uygun\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n  },\r\n  \r\n  // Profil fotoğrafını getir\r\n  getProfilePhoto: (userId) => api.get(`/api/UserProfile/GetUserProfilePhoto/${userId}`),\r\n  \r\n  // Profil fotoğrafını sil\r\n  deleteProfilePhoto: (userId) => api.post(`/api/UserProfile/DeleteUserProfilePhoto/${userId}`),\r\n  \r\n  // Bildirim ayarlarını güncelle\r\n  updateNotificationSettings: (settings) => api.put('/api/UserProfile/UpdateNotificationSettings', settings),\r\n  \r\n  // Bildirim ayarlarını getir\r\n  getNotificationSettings: (userId) => api.get(`/api/UserProfile/GetNotificationSettings/${userId}`),\r\n  \r\n  // Sosyal hesap bağla\r\n  linkSocialAccount: (userId, provider, accessToken) => \r\n    api.get('/api/UserProfile/LinkSocialAccount', {\r\n      params: { userId, provider, accessToken }\r\n    }),\r\n  \r\n  // Bağlı sosyal hesapları getir\r\n  getLinkedSocialAccounts: (userId) => api.get(`/api/UserProfile/GetLinkedSocialAccounts/${userId}`),\r\n  \r\n  getUserProfileByUserId: (userId) => api.get(`/api/UserProfile/GetUserProfile/${userId}`),\r\n}; "],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAEvB,MAAO,MAAM,CAAAC,WAAW,CAAG,CACzB;AACAC,KAAK,CAAGC,WAAW,EAAKH,GAAG,CAACI,IAAI,CAAC,iBAAiB,CAAED,WAAW,CAAC,CAEhE;AACAE,QAAQ,CAAGC,QAAQ,EAAKN,GAAG,CAACI,IAAI,CAAC,oBAAoB,CAAEE,QAAQ,CAAC,CAEhE;AACAC,WAAW,CAAGC,MAAM,EAAKR,GAAG,CAACS,GAAG,CAAC,yBAAyBD,MAAM,EAAE,CAAC,CAEnE;AACAE,cAAc,CAAGC,KAAK,EAAKX,GAAG,CAACS,GAAG,CAAC,4BAA4BE,KAAK,EAAE,CAAC,CAEvE;AACAC,QAAQ,CAAEA,CAAA,GAAMZ,GAAG,CAACS,GAAG,CAAC,oBAAoB,CAAC,CAE7C;AACAI,UAAU,CAAGP,QAAQ,EAAKN,GAAG,CAACc,GAAG,CAAC,sBAAsB,CAAER,QAAQ,CAAC,CAEnE;AACAS,UAAU,CAAGP,MAAM,EAAKR,GAAG,CAACI,IAAI,CAAC,sBAAsB,CAAE,CAAEI,MAAO,CAAC,CAAC,CAEpE;AAEA;AACAQ,cAAc,CAAGR,MAAM,EAAKR,GAAG,CAACS,GAAG,CAAC,mCAAmCD,MAAM,EAAE,CAAC,CAEhF;AACAS,iBAAiB,CAAGC,eAAe,EAAKlB,GAAG,CAACc,GAAG,CAAC,oCAAoC,CAAEI,eAAe,CAAC,CAEtG;AACAC,iBAAiB,CAAGD,eAAe,EAAKlB,GAAG,CAACI,IAAI,CAAC,oCAAoC,CAAEc,eAAe,CAAC,CAEvG;AACAE,aAAa,CAAGZ,MAAM,EAAKR,GAAG,CAACS,GAAG,CAAC,kCAAkCD,MAAM,EAAE,CAAC,CAE9E;AACAa,kBAAkB,CAAEA,CAACb,MAAM,CAAEc,IAAI,GAAK,CACpC,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEH,IAAI,CAAC,CAC7BC,QAAQ,CAACE,MAAM,CAAC,QAAQ,CAAEjB,MAAM,CAAC,CAEjC,MAAO,CAAAR,GAAG,CAACI,IAAI,CAAC,yCAAyC,CAAEmB,QAAQ,CAAE,CACnEG,OAAO,CAAE,CACP,cAAc,CAAE,qBAClB,CACF,CAAC,CAAC,CACJ,CAAC,CAED;AACAC,wBAAwB,CAAEA,CAACnB,MAAM,CAAEoB,WAAW,GAAK,CACjD,MAAO,CAAA5B,GAAG,CAACI,IAAI,CAAC,yCAAyC,CAAE,CACzDI,MAAM,CAAEA,MAAM,CACdqB,kBAAkB,CAAED,WAAY;AAClC,CAAC,CAAE,CACDF,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CACJ,CAAC,CAED;AACAI,eAAe,CAAGtB,MAAM,EAAKR,GAAG,CAACS,GAAG,CAAC,wCAAwCD,MAAM,EAAE,CAAC,CAEtF;AACAuB,kBAAkB,CAAGvB,MAAM,EAAKR,GAAG,CAACI,IAAI,CAAC,2CAA2CI,MAAM,EAAE,CAAC,CAE7F;AACAwB,0BAA0B,CAAGC,QAAQ,EAAKjC,GAAG,CAACc,GAAG,CAAC,6CAA6C,CAAEmB,QAAQ,CAAC,CAE1G;AACAC,uBAAuB,CAAG1B,MAAM,EAAKR,GAAG,CAACS,GAAG,CAAC,4CAA4CD,MAAM,EAAE,CAAC,CAElG;AACA2B,iBAAiB,CAAEA,CAAC3B,MAAM,CAAE4B,QAAQ,CAAEC,WAAW,GAC/CrC,GAAG,CAACS,GAAG,CAAC,oCAAoC,CAAE,CAC5C6B,MAAM,CAAE,CAAE9B,MAAM,CAAE4B,QAAQ,CAAEC,WAAY,CAC1C,CAAC,CAAC,CAEJ;AACAE,uBAAuB,CAAG/B,MAAM,EAAKR,GAAG,CAACS,GAAG,CAAC,4CAA4CD,MAAM,EAAE,CAAC,CAElGgC,sBAAsB,CAAGhC,MAAM,EAAKR,GAAG,CAACS,GAAG,CAAC,mCAAmCD,MAAM,EAAE,CACzF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}